public class MatrixAddition {

    public static void main(String[] args) {
        // Define two matrices
        int[][] matrixA = {
            {1, 2, 3},
            {4, 5, 6}
        };

        int[][] matrixB = {
            {7, 8, 9},
            {10, 11, 12}
        };

        // Perform matrix addition
        int[][] result = addMatrices(matrixA, matrixB);

        // Print the result
        printMatrix(result);
    }

    public static int[][] addMatrices(int[][] a, int[][] b) {
        // Check if addition is possible
        if (a.length != b.length || a[0].length != b[0].length) {
            throw new IllegalArgumentException("Matrices must have the same dimensions.");
        }

        int rows = a.length;
        int cols = a[0].length;

        // Create the result matrix
        int[][] result = new int[rows][cols];


        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                result[i][j] = a[i][j] + b[i][j];
            }
        }

        return result;
    }

    public static void printMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}













----------------------------------------
public class MatrixMultiplication {

    public static void main(String[] args) {
        // Define two matrices
        int[][] matrixA = {
            {1, 2, 3},
            {4, 5, 6}
        };

        int[][] matrixB = {
            {7, 8},
            {9, 10},
            {11, 12}
        };

        // Perform matrix multiplication
        int[][] result = multiplyMatrices(matrixA, matrixB);

        // Print the result
        printMatrix(result);
    }

    public static int[][] multiplyMatrices(int[][] a, int[][] b) {
        // Check if multiplication is possible
        if (a[0].length != b.length) {
            throw new IllegalArgumentException("Matrix A columns must match Matrix B rows.");
        }

        int rowsA = a.length;
        int colsA = a[0].length;
        int rowsB = b.length;
        int colsB = b[0].length;

        // Create the result matrix
        int[][] result = new int[rowsA][colsB];

        // Multiply matrices using standard loops
        for (int i = 0; i < rowsA; i++) {
            for (int j = 0; j < colsB; j++) {
                result[i][j] = 0; // Initialize the result element
                for (int k = 0; k < colsA; k++) {
                    result[i][j] += a[i][k] * b[k][j];
                }
            }
        }

        return result;
    }

    public static void printMatrix(int[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}
